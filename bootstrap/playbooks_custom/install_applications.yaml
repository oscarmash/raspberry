---
# Helm
- name: Install Helm
  hosts: kube_control_plane
  gather_facts: false
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: Create helm temp dir
      ansible.builtin.file:
        path: /tmp/helm
        state: directory
      tags: install_helm

    - name: Download helm
      ansible.builtin.get_url:
        dest: /tmp/
        url: "https://get.helm.sh/helm-{{ helm_release }}-linux-amd64.tar.gz"
      tags: install_helm

    - name: Unarchive helm  
      ansible.builtin.unarchive:
        src: "/tmp/helm-{{ helm_release }}-linux-amd64.tar.gz"
        dest: /tmp/helm
        remote_src: yes
      tags: install_helm

    - name: Install helm  
      ansible.builtin.copy:
        src: /tmp/helm/linux-amd64/helm
        dest: /usr/local/bin/helm
        mode: 0755
        remote_src: yes
      become: true
      tags: install_helm

# Cilium installation
- name: Cilium installation and configuration
  hosts: kube_control_plane
  gather_facts: false
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:

    - name: Install openshift dependency
      ansible.builtin.package:
        name: python3-openshift
        state: present
      tags: cilium_installation

    - name: Install Cilium Chart
      kubernetes.core.helm:
        binary_path: /usr/local/bin/helm
        name: cilium
        namespace: kube-system
        chart_repo_url: https://helm.cilium.io/
        chart_ref: cilium
        chart_version: "{{ chart_version_cilium }}"
        values: "{{ lookup('template', '/kubespray/cluster-apps/charts-values/values-cilium.yaml') | from_yaml }}"
        release_state: present
        wait: true
      tags: cilium_installation

    - name: Apply config LB IPAM
      k8s:
        definition: "{{ lookup('file', '/kubespray/cluster-apps/configs/cilium/lb-ipam.yaml') | from_yaml_all }}"
        state: present
      tags: cilium_installation, cilium_config

# Metrics Server installation
- name: Metrics server installation and configuration
  hosts: kube_control_plane
  gather_facts: false
  ignore_errors: true
  tasks:
    - name: Install Metrics server Chart
      kubernetes.core.helm:
        binary_path: /usr/local/bin/helm
        name: metrics-server
        namespace: kube-system
        chart_repo_url: https://kubernetes-sigs.github.io/metrics-server/
        chart_ref: metrics-server
        chart_version: "{{ chart_version_metrics_server }}"
        wait: true
        values: 
          args: 
            - --kubelet-insecure-tls
      tags: metrics-server_installation

# Ingress-nginx installation
- name: Ingress-nginx installation and configuration
  hosts: kube_control_plane
  gather_facts: false
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: Install ingress-nginx Chart
      kubernetes.core.helm:
        binary_path: /usr/local/bin/helm
        name: ingress-nginx
        create_namespace: true
        namespace: ingress-nginx
        chart_repo_url: https://kubernetes.github.io/ingress-nginx
        chart_ref: ingress-nginx
        chart_version: "{{ chart_version_ingress_nginx }}"
        values: "{{ lookup('template', '/kubespray/cluster-apps/charts-values/values-ingress-nginx.yaml') | from_yaml }}"
        release_state: present
        wait: true
      tags: ingress-nginx_installation

# Rook installation
- name: Rook installation
  hosts: kube_control_plane
  gather_facts: false
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: Install Rook Chart
      kubernetes.core.helm:
        binary_path: /usr/local/bin/helm
        name: rook-ceph
        create_namespace: true
        namespace: rook-ceph
        chart_repo_url: https://charts.rook.io/release
        chart_ref: rook-ceph
        chart_version: "{{ chart_version_rook }}"
        values: "{{ lookup('template', '/kubespray/cluster-apps/charts-values/values-rook.yaml') | from_yaml }}"
        release_state: present
        wait: true
      tags: rook_installation

# Vault installation
- name: Vault installation
  hosts: kube_control_plane
  gather_facts: true
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  tasks:
    - name: Install Vault Chart
      kubernetes.core.helm:
        binary_path: /usr/local/bin/helm
        name: vault
        create_namespace: true
        namespace: vault
        chart_repo_url: https://helm.releases.hashicorp.com
        chart_ref: vault
        chart_version: "{{ chart_version_vault }}"
        values: "{{ lookup('template', '/kubespray/cluster-apps/charts-values/values-vault.yaml') | from_yaml }}"
        release_state: present
        wait: true
      tags: vault_installation

    - name: Add HashiCorp repo
      ansible.builtin.shell: |
        wget -O - https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
      tags: vault_binary_installation

    - name: Install Vault
      ansible.builtin.apt:
        name: vault
        state: present
        update_cache: yes      
      tags: vault_binary_installation

    - name: unsealt_vault_script.sh -> copy template unsealt_vault_script.sh
      ansible.builtin.template:
        src: /kubespray/playbooks_custom/templates/unsealt_vault_script.sh.j2
        dest: /usr/local/sbin/unsealt_vault_script.sh
        owner: root
        group: root
        mode: '0755'
      tags: unsealt_vault_script

    - name: unsealt_vault_script.sh-> copy file systemd
      ansible.builtin.copy:
        src: /kubespray/playbooks_custom/files/unsealt_vault_script.service
        dest: /etc/systemd/system/unsealt_vault_script.service
        mode: 0755
      tags: unsealt_vault_script

    - name: unsealt_vault_script.sh -> enable systemd 
      ansible.builtin.systemd_service:
        state: started
        daemon_reload: true
        name: unsealt_vault_script.service
        enabled: true
      tags: unsealt_vault_script